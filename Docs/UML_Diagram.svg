<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="791px" height="622px" viewBox="-0.5 -0.5 791 622" content="&lt;mxfile host=&quot;www.draw.io&quot; modified=&quot;2019-10-23T00:42:57.390Z&quot; agent=&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36&quot; etag=&quot;QKLOXwajmzI8P54EQlRJ&quot; version=&quot;12.1.3&quot; type=&quot;google&quot; pages=&quot;1&quot;&gt;&lt;diagram id=&quot;5DwuUj-Mu0SwdodNw-W1&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs><clipPath id="mx-clip-194-81-152-84-0"><rect x="194" y="81" width="152" height="84"/></clipPath><clipPath id="mx-clip-394-81-202-84-0"><rect x="394" y="81" width="202" height="84"/></clipPath><clipPath id="mx-clip-394-173-202-62-0"><rect x="394" y="173" width="202" height="62"/></clipPath><clipPath id="mx-clip-194-331-242-44-0"><rect x="194" y="331" width="242" height="44"/></clipPath><clipPath id="mx-clip-194-383-242-62-0"><rect x="194" y="383" width="242" height="62"/></clipPath></defs><g><path d="M 190 76 L 190 50 L 350 50 L 350 76" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 76 L 190 160 L 350 160 L 350 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 76 L 350 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="269.5" y="68.5">Layer</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-194-81-152-84-0)" font-size="12px"><text x="195.5" y="93.5">+ nodes: float32[]</text><text x="195.5" y="107.5">+ nodeCount : int</text></g><path d="M 390 76 L 390 50 L 600 50 L 600 76" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 390 76 L 390 230 L 600 230 L 600 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 390 76 L 600 76" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="494.5" y="68.5">ConnectionMatrix</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-394-81-202-84-0)" font-size="12px"><text x="395.5" y="93.5">+ weights: float32[][] </text><text x="395.5" y="107.5">       //||input||x||output||</text><text x="395.5" y="121.5">+ inputLayer: Layer</text><text x="395.5" y="135.5">+ outputLayer: Layer</text></g><path d="M 390 164 L 600 164" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-394-173-202-62-0)" font-size="12px"><text x="395.5" y="185.5">+ initializeWeights() : () </text><text x="395.5" y="199.5">+ feedForward(): () </text><text x="395.5" y="213.5">+ backpropagate (float32[]) : float32[]</text></g><path d="M 383.63 118 L 356.37 118" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 388.88 118 L 381.88 120.33 L 383.63 118 L 381.88 115.67 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 351.12 118 L 358.12 114.5 L 356.37 118 L 358.12 121.5 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 252.5 300 L 252.1 168.38" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 252.08 163.13 L 254.44 170.13 L 252.1 168.38 L 249.77 170.14 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 326 L 190 300 L 440 300 L 440 326" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 326 L 190 440 L 440 440 L 440 326" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 190 326 L 440 326" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" font-weight="bold" text-anchor="middle" font-size="12px"><text x="314.5" y="318.5">Network</text></g><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-194-331-242-44-0)" font-size="12px"><text x="195.5" y="343.5">+ layers: Layer[]</text><text x="195.5" y="357.5">+ connections: ConnectionMatrix[]</text></g><path d="M 190 374 L 440 374" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g fill="#000000" font-family="Helvetica" clip-path="url(#mx-clip-194-383-242-62-0)" font-size="12px"><text x="195.5" y="395.5">+ initialized () : ()</text><text x="195.5" y="409.5">+ run(float32[]): float32[] </text><text x="195.5" y="423.5">+ train(float32[],float32[],float) : float32</text></g><path d="M 440 348 L 499 348 L 499 235.37" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 499 230.12 L 502.5 237.12 L 499 235.37 L 495.5 237.12 Z" fill="#000000" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 100 392 L 190 348" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 0 350 L 166 350 L 180 364 L 180 620 L 0 620 L 0 350 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 166 350 L 166 364 L 180 364" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2.5,351.5)"><switch><foreignObject style="overflow:visible;" pointer-events="none" width="176" height="253" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 176px; white-space: nowrap; overflow-wrap: normal; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;"><i>layers </i>is the array of layers<br /><i>connections </i>is the array of connection matrices<br /><i>initialize</i> randomizes the weights on all connection matrices<br /><i>run </i>takes an input array and returns the resulting output array<br /><i>train </i>takes the input array, the expected output array and the epsilon (the accepted change in error) and runs feed-forward and back-propagation until convergence (change in error = epsilon) and returns the error</div></div></foreignObject><text x="88" y="133" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 90 620 L 90 620" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 608 118 L 600 118" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 610 0 L 776 0 L 790 14 L 790 320 L 610 320 L 610 0 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 776 0 L 776 14 L 790 14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(612.5,1.5)"><switch><foreignObject style="overflow:visible;" pointer-events="none" width="176" height="313" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 176px; white-space: nowrap; overflow-wrap: normal; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;"><i>weights </i>is the 2D array of weights ||inputs||x||outputs|| size that transforms inputs into outputs<br /><i>inputLayer </i>is the reference to the previous layer<br /><i>outputLayer</i> is the reference to the proceeding layer<br /><i>initializeWeights </i>randomizes the weights<br /><i>feedForward </i>takes the input layer and cross multiplies inputLayer.nodes and weights and assigns the resulting 1D array into outputLayer<br /><i>backpropogate </i>takes the deltas for the outputLayer infront and returns the deltas for the error of the inputLayer behind,<br />after modifying our weights</div></div></foreignObject><text x="88" y="163" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g><path d="M 181.08 117.12 L 190 118" fill="none" stroke="#000000" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="none"/><path d="M 0 0 L 166 0 L 180 14 L 180 320 L 0 320 L 0 0 Z" fill="#ffffff" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><path d="M 166 0 L 166 14 L 180 14" fill="none" stroke="#000000" stroke-miterlimit="10" pointer-events="none"/><g transform="translate(2.5,1.5)"><switch><foreignObject style="overflow:visible;" pointer-events="none" width="176" height="208" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: inline-block; font-size: 12px; font-family: Helvetica; color: rgb(0, 0, 0); line-height: 1.2; vertical-align: top; width: 176px; white-space: nowrap; overflow-wrap: normal; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display:inline-block;text-align:inherit;text-decoration:inherit;white-space:normal;"><i>nodes </i>is an array of foat32s that represent the input values for this layer. This array should have size that is a multiple of the SIMD register size we are working with (128: 4; 256:8;...)<br /><i>nodeCount </i>the actual number of nodes used by the connection matrix to set weights OUTSIDE of this layer to 0 (saying that there are phantom connections to phantom nodes of weight 0)</div></div></foreignObject><text x="88" y="110" fill="#000000" text-anchor="middle" font-size="12px" font-family="Helvetica">[Not supported by viewer]</text></switch></g></g></svg>